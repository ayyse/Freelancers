import { HttpClient, HttpRequest } from '@angular/common/http';
import { Observable } from 'rxjs';
import { ExternalHttpClient } from '../clients/http.client';
import { ABP } from '../models/common';
import { Rest } from '../models/rest';
import { EnvironmentService } from './environment.service';
import { HttpErrorReporterService } from './http-error-reporter.service';
import * as i0 from "@angular/core";
export declare class RestService {
    protected options: ABP.Root;
    protected http: HttpClient;
    protected externalHttp: ExternalHttpClient;
    protected environment: EnvironmentService;
    protected httpErrorReporter: HttpErrorReporterService;
    constructor(options: ABP.Root, http: HttpClient, externalHttp: ExternalHttpClient, environment: EnvironmentService, httpErrorReporter: HttpErrorReporterService);
    protected getApiFromStore(apiName: string | undefined): string;
    handleError(err: any): Observable<any>;
    request<T, R>(request: HttpRequest<T> | Rest.Request<T>, config?: Rest.Config, api?: string): Observable<R>;
    private getHttpClient;
    private getParams;
    private removeDuplicateSlashes;
    static ɵfac: i0.ɵɵFactoryDeclaration<RestService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<RestService>;
}
